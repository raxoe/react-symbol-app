Keep Sync

â€¢ Borken Access Control (consider as Role Management)
Access control enforces policy => users cannot act outside of their intended permissions.
Failures will lead to unauthorized info disclosure, modification, destruction of all data or biz func.
Common access control Vulnerabilities  include :
-Violation of priciple of least privilege or deny by default => (role/user access should granted for particular capabilities but avaliable to anyone)
-Modify URL will Bypass the access control => para tampering/browsing to internal app state, html page, attack tool to modify api request
-Permission(view/edit) with unique identifier(insecure direct obj references)
-Accessing api with missing access controls for POST,PUT,DELETE
-Elevation of privilege, acting like user without login or act like admin when logged in as user
-Metadata manipulation, e.g tampering JWT, Cookie or hidden field manipulated to elevate privileges or abusing JWT invalidation.
-CORS misconfiguration, that allow API access from unauthorized/untrusted origins.
-Force browsing to authenticated page as unauthenticated user or to privileged pages as a standard user.

PREVENTION
Access Control is only effective in trusted server-side code or server-less api , where attacher canot modify access control check or metadata.

-Except for public resources, deny by default
-Implement access control mechanisms once and reuse througtout application, including minimizing Cross-Origin Resource Sharing (CORS) usage.

